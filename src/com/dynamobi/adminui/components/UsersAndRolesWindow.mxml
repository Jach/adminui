<?xml version="1.0" encoding="utf-8"?>
<!--
Dynamo Admin UI is a web service project for administering LucidDB
Copyright (C) 2010 Dynamo Business Intelligence Corporation

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version approved by Dynamo Business Intelligence Corporation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:components="com.dynamobi.adminui.components.*"
           xmlns:view="com.dynamobi.adminui.view.*"
           width="100%" height="100%"
           creationComplete="init();"
           >
    <mx:states>
        <mx:State name="users">
            <mx:AddChild relativeTo="{users_roles_half}" position="firstChild">
                <components:UsersWindow id="uw" creationPolicy="all" />
            </mx:AddChild>
            <mx:SetProperty target="{perm_window}" name="title" value="Grant Permissions to Selected User" />
        </mx:State>
        <mx:State name="roles">
            <mx:AddChild relativeTo="{users_roles_half}" position="firstChild">
                <components:RolesWindow id="rw" creationPolicy="all" />
            </mx:AddChild>
            <mx:SetProperty target="{perm_window}" name="title" value="Grant Permissions to Selected Role" />
        </mx:State>
    </mx:states>
    
    <mx:VBox width="95%">
        <mx:HBox id="users_roles_half" left="10" right="10" top="10" bottom="10" width="100%">
        </mx:HBox>
        <!--<mx:ComboBox height="0%" valueCommit="{reloadUsers();}" dataProvider="{model.users_list}" visible="false" />-->
        
        <view:PermissionsWindow enabled="{perms_enabled()}"
                                grantee="{get_grantee()}"
                                grantee_type="{get_grantee_type()}"
                                id="perm_window" left="10" right="10" bottom="0"
                                width="100%"  height="100%" minHeight="300" />
        
    </mx:VBox>

    <mx:Script>
        <![CDATA[
            import com.adobe.cairngorm.control.CairngormEventDispatcher;
            import com.dynamobi.adminui.events.UsersAndRolesEvent;
            import com.dynamobi.adminui.model.ModelLocator;
            import com.dynamobi.adminui.utils.CustomFuncs;
            
            import mx.events.FlexEvent;
           
            [Bindable]
            private var model:ModelLocator = ModelLocator.getInstance();
            
            public function init() : void {
            }
            
            public function set_user_mode(mode:String, name:String, force:Boolean=false) : void {
                if (uw == null) {
                    callLater(set_user_mode, [mode, name]);
                } else {
                    var callit:Function = function():void {
                        uw.set_name(name);
                        uw.currentState = mode;
                        uw.modify_user.addEventListener(FlexEvent.CREATION_COMPLETE, function():void {
                            uw.modify_user.users.addEventListener(Event.CHANGE, reset_perms);
                        });
                        var rolesEvent:UsersAndRolesEvent = new UsersAndRolesEvent('getRolesDetails');
                        CairngormEventDispatcher.getInstance().dispatchEvent(rolesEvent);
                        dispatchEvent(new Event("stateChange"));
                        reset_perms();
                    };
                    if (force)
                        callit();
                    else
                        uw.addEventListener(FlexEvent.CREATION_COMPLETE, callit);
                }
            }

            public function set_role_mode(mode:String, name:String) : void {
                if (rw == null) {
                    callLater(set_role_mode, [mode, name]);
                } else {
                    rw.role_name.text = name;
                    rw.currentState = mode;
                    rw.modding = (mode == 'edit');
                    model.roles_info = null;
                    var rolesEvent:UsersAndRolesEvent = new UsersAndRolesEvent('getRolesDetails');
                    CairngormEventDispatcher.getInstance().dispatchEvent(rolesEvent);
                    rw.reloadUsers();
                    rw.select_role(name);
                    rw.edit_role_list.addEventListener(Event.CHANGE, reset_perms);
                    dispatchEvent(new Event("stateChange"));
                    reset_perms();
                }
            }
            
            [Bindable(event="stateChange")]
            public function perms_enabled() : Boolean {
                return (currentState == 'users' && uw.currentState == 'edit') ||
                    (currentState == 'roles' && rw.currentState == 'edit');
            }
            
            [Bindable(event="stateChange")]
            public function get_grantee() : String {
                if (currentState == 'users')
                    return uw.modify_user.user;
                else if (currentState == 'roles')
                    return rw.selected_role;
                else
                    return '';
            }
            [Bindable(event="stateChange")]
            public function get_grantee_type() : String {
                if (currentState == 'users')
                    return 'user';
                else if (currentState == 'roles')
                    return 'role';
                else
                    return '';
            }
            
            public function reset_perms(event:*=null) : void {
                dispatchEvent(new Event("stateChange"));
                perm_window.init();
            }
            
        ]]>
    </mx:Script>
    
</mx:Canvas>
