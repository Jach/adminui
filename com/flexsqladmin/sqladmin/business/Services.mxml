<?xml version="1.0" encoding="utf-8"?>
<!--
Dynamo Admin UI is a web service project for administering LucidDB
Copyright (C) 2010 Dynamo Business Intelligence Corporation

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version approved by Dynamo Business Intelligence Corporation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->
<cairngorm:ServiceLocator
	xmlns:cairngorm="com.adobe.cairngorm.business.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
    >
	
	<mx:Script>
		<![CDATA[
            import mx.controls.Alert;
            import mx.managers.CursorManager;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.http.Operation;

            public static var service_fault_alert:Alert;
            
            public function basic_fault_handler(event:FaultEvent) : void {
                CursorManager.removeBusyCursor();
                
                /* Implement smart timeouts */
                /*if (event.fault.faultCode == 'Client.Error.RequestTimeout') {
                    Alert.show("A service call has failed due to a timeout. Please check to see " +
                        "if the server is running. Do you wish to try again with no timeout limit?",
                        "Error", Alert.YES|Alert.NO,
                        FlexGlobals.topLevelApplication as Sprite,
                        function(e:CloseEvent):void {
                            if (e.detail == Alert.YES) {
                                var args:Array = (event.target as Operation).arguments as Array;
                                
                            }
                        }
                    }, confirmicon, Alert.YES);
                
                */
                
                service_fault_alert = Alert.show("A service call has failed. Please check to see " +
                    "if the server is running or try again.", "Error");
                event.token.faultHandler(event);
            }
		]]>
	</mx:Script>
	
	<mx:WebService 
		id="sqlWebService" 
		service='FlexSQLAdminService'
		useProxy="false" 
		makeObjectsBindable="false"
		showBusyCursor="true"
        requestTimeout="-1"
		fault="mx.controls.Alert.show('Error loading WSDL--is your AdminUI Server running?', 'Webservice Error');" >
        <mx:operation name="execSQL" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <connection></connection>
                <sqlquerytype></sqlquerytype>
                <sql></sql>
                <toomany></toomany>
            </mx:request>
        </mx:operation>
        <mx:operation name="getDBMetaData" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
			<mx:request>   
			<connection></connection>
			<catalog></catalog> 
			</mx:request>    
        </mx:operation>
        <mx:operation name="handleUpdate" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <connection></connection>
                <testsql></testsql>
                <sql></sql>
                <toomany></toomany>
            </mx:request>
        </mx:operation>
        <mx:operation name="getUsers" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request></mx:request>
        </mx:operation>
        <mx:operation name="getRoles" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request></mx:request>
        </mx:operation>
        <mx:operation name="getForeignTables" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request><schema></schema></mx:request>
        </mx:operation>
        <mx:operation name="getFunctions" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request><schema></schema></mx:request>
        </mx:operation>
        <mx:operation name="getProcedures" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request><schema></schema></mx:request>
        </mx:operation>
        <mx:operation name="getRemoteData" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request></mx:request>
        </mx:operation>
        <mx:operation name="getJars" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request><schema></schema></mx:request>
        </mx:operation>
        <mx:operation name="getSchemaDdl" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <catalog></catalog>
                <schema></schema>
            </mx:request>
        </mx:operation>
    </mx:WebService>
    
    <mx:WebService
        id="TableDetailsService" 
        service='TableDetailsService'
        useProxy="false" 
        makeObjectsBindable="false"
        showBusyCursor="true"
        requestTimeout="-1"
        fault="mx.controls.Alert.show('Error loading WSDL--is your AdminUI Server running?', 'DBService Error');" >
        <mx:operation name="getTableDetails" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <catalog></catalog>
                <schema></schema>
                <table></table>
            </mx:request>
        </mx:operation>
        <mx:operation id="postTableDetails" name="postTableDetails" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
        </mx:operation>
        <mx:operation name="createSchema" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <catalog></catalog>
                <schema></schema>
            </mx:request>
        </mx:operation>
    </mx:WebService>
    
    <mx:WebService
        id="UsersAndRolesService"
        service="UsersAndRolesService"
        useProxy="false"
        makeObjectsBindable="false"
        showBusyCursor="false"
        requestTimeout="-1"
        fault="mx.controls.Alert.show('Error loading WSDL--is your AdminUI Server running?', 'UsersAndRolesService Error');" >
        <mx:operation name="getCurrentSessions" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
            </mx:request>
        </mx:operation>
        <mx:operation name="getUsersDetails" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
            </mx:request>
        </mx:operation>
        <mx:operation name="getRolesDetails" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
            </mx:request>
        </mx:operation>
        <mx:operation name="addNewUser" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <user></user>
                <password></password>
            </mx:request>
        </mx:operation>
        <mx:operation name="addNewRole" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <role></role>
            </mx:request>
        </mx:operation>
        <mx:operation name="modifyUser" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <user></user>
                <password></password>
            </mx:request>
        </mx:operation>
        <mx:operation name="deleteUser" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <user></user>
            </mx:request>
        </mx:operation>
        <mx:operation name="userToRole" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <user></user>
                <role></role>
                <added></added>
                <with_grant></with_grant>
            </mx:request>
        </mx:operation>
        <mx:operation name="deleteRole" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <role></role>
            </mx:request>
        </mx:operation>
        <mx:operation name="grantPermissionsOnSchema" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <catalog></catalog>
                <schema></schema>
                <permissions></permissions>
                <grantee></grantee>
            </mx:request>
        </mx:operation>
        <mx:operation name="grantPermissions" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <catalog></catalog>
                <schema></schema>
                <type></type>
                <element></element>
                <permissions></permissions>
                <grantee></grantee>
            </mx:request>
        </mx:operation>
        <mx:operation name="revokePermissionsOnSchema" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <catalog></catalog>
                <schema></schema>
                <permissions></permissions>
                <grantee></grantee>
            </mx:request>
        </mx:operation>
        <mx:operation name="revokePermissions" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <catalog></catalog>
                <schema></schema>
                <type></type>
                <element></element>
                <permissions></permissions>
                <grantee></grantee>
            </mx:request>
        </mx:operation>
    </mx:WebService>
    
    <mx:WebService
        id="PerformanceCountersService" 
        service='PerformanceCountersService'
        useProxy="false" 
        makeObjectsBindable="false"
        showBusyCursor="false"
        requestTimeout="-1"
        fault="mx.controls.Alert.show('Error loading WSDL--is your AdminUI Server running?', 'PerformanceCountersService Error');" >
        <mx:operation name="findPerformanceCounterByName" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <counterName></counterName>
            </mx:request>
        </mx:operation>
        <mx:operation name="getAllPerformanceCounters" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
            </mx:request>
        </mx:operation>
        <mx:operation name="getCountersByNames" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <names></names>
            </mx:request>
        </mx:operation>
    </mx:WebService>

    <mx:WebService
        id="ForeignDataService" 
        service='ForeignDataService'
        useProxy="false" 
        makeObjectsBindable="false"
        showBusyCursor="true"
        requestTimeout="-1"
        fault="mx.controls.Alert.show('Error loading WSDL--is your AdminUI Server running?', 'ForeignDataService Error');" >
        <mx:operation name="getWrapperOptions" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <wrapper></wrapper>
            </mx:request>
        </mx:operation>
        <mx:operation name="getExtendedWrapperOptions" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <wrapper></wrapper>
                <driver></driver>
            </mx:request>
        </mx:operation>
        <mx:operation name="getWrapperOptionsForServer" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <server></server>
            </mx:request>
        </mx:operation>
        <mx:operation name="createServer" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <server_name></server_name>
                <wrapper_name></wrapper_name>
                <options></options>
            </mx:request>
        </mx:operation>
        <mx:operation name="getForeignData" resultFormat="e4x" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <server_name></server_name>
            </mx:request>
        </mx:operation>
        <mx:operation name="testServer" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <server_name></server_name>
            </mx:request>
        </mx:operation>
        <mx:operation name="importForeignSchema" resultFormat="object" result="event.token.resultHandler(event);" fault="basic_fault_handler(event);">
            <mx:request>
                <server></server>
                <from_schema></from_schema>
                <to_schema></to_schema>
                <tables></tables>
            </mx:request>
        </mx:operation>

    </mx:WebService>

</cairngorm:ServiceLocator>