<?xml version="1.0" encoding="utf-8"?>
<components:QueryWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="com.flexsqladmin.sqladmin.components.*"
                        creationComplete="init();init2();">
    
    <mx:Script>
        <![CDATA[
            import com.adobe.cairngorm.control.CairngormEventDispatcher;
            import com.flexsqladmin.sqladmin.events.ExecuteSQLEvent;
            import com.flexsqladmin.sqladmin.model.ModelLocator;
            import com.flexsqladmin.sqladmin.view.NewSchemaWindow;
            import com.flexsqladmin.sqladmin.vo.QueryHistoryVO;
            import com.flexsqladmin.sqladmin.vo.QueryResultInfo;
            
            import mx.core.Application;
            import mx.managers.PopUpManager;
            
            [Bindable]
            private var model:ModelLocator = ModelLocator.getInstance();
            
            public var editing:Boolean = false;
            
            private var the_guessed_schema:String;
            
            public function init2() : void {    
                this.window_actions.removeAllChildren();
                //this.tabresults_holder.removeAllChildren();
                querytext.setStyle("top", "135");
                tabresults_holder.percentHeight = 30;
                view_info.visible = true;
                view_name.setFocus();
                submitQuery();
            }
            
            public function guess_schema(guessed_schema:String) : void {
                the_guessed_schema = guessed_schema;
                for (var i:Number = 0; i < view_schema.dataProvider.length; i++) {
                    if (view_schema.dataProvider[i].@label == guessed_schema) {
                        view_schema.selectedIndex = i;
                        break;
                    }
                }
            }
            
            override public function newSchema() : void {
                var sch_win:NewSchemaWindow = NewSchemaWindow(PopUpManager.createPopUp(this, NewSchemaWindow, true));
                sch_win.setStyle("borderAlpha", 0.8);
                sch_win.showCloseButton = true;
                sch_win.addEventListener(Event.CLOSE, function():void {
                    view_schema.dataProvider = new XMLList(model.metadata.children());
                    guess_schema(the_guessed_schema);
                });
            }
            
            override public function makeView() : void {
                var sql:String = getQueryText();
                var view_sql:String = "CREATE ";
                if (editing)
                    view_sql += "OR REPLACE ";
                view_sql += 'VIEW "' + model.currentcatalogname + '"."'
                + view_schema.text + '"."'
                + view_name.text + '" DESCRIPTION \'' + view_desc.text + '\' AS ' + sql;
                var sqlevent:ExecuteSQLEvent = new ExecuteSQLEvent(view_sql, "normal");
                CairngormEventDispatcher.getInstance().dispatchEvent(sqlevent);
            }
        ]]>
    </mx:Script>
</components:QueryWindow>
