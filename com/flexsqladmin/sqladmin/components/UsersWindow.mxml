<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:components="com.flexsqladmin.sqladmin.components.*"
           width="100%"
           height="100%"
           creationComplete="init();"
           >
    <mx:Script>
        <![CDATA[
            import mx.core.Application;
        ]]>
    </mx:Script>
    
    <mx:Validator source="{user_name}" property="text" />
    <mx:Validator source="{user_pass}" property="text" />
    <mx:Validator source="{user_pass2}" property="text" />
    
    <mx:VBox width="100%" left="10" right="10" top="10" bottom="10">
    <mx:HBox width="100%">
        <mx:Panel title="Create New User">
            <mx:Form>
                <mx:FormItem label="Name: ">
                    <mx:TextInput id="user_name" />
                </mx:FormItem>
                <mx:FormItem label="Password: ">
                    <mx:TextInput displayAsPassword="true" id="user_pass" />
                </mx:FormItem>
                <mx:FormItem label="Confirm Password: ">
                    <mx:VBox>
                        <mx:TextInput displayAsPassword="true" id="user_pass2" change="passValidate();" />
                        <mx:Label x="0" text="Passwords do not match" color="red" id="p_matches" visible="false" />
                    </mx:VBox>
                </mx:FormItem>
                <mx:FormItem>
                    <mx:Button label="Create" click="createUser();" icon="@Embed(source='/icons/exec.gif')" />                    
                </mx:FormItem>
            </mx:Form>
        </mx:Panel>
        <mx:Spacer width="15%" />
        <mx:VBox>
            <mx:ComboBox id="users_list" prompt="Select User" selectedIndex="-1" creationComplete="checkUsersList();" dataProvider="{model.users_list}" />
            <mx:Button label="Modify User" click="modifyUser();" icon="@Embed(source='/icons/exec.gif')" />
        </mx:VBox>
        <mx:Spacer width="15%" />
        <mx:Panel title="Active User Sessions" width="100%">
            <mx:HBox>
            <mx:Label text="Update every: " />
            <mx:NumericStepper id="update_interval" value="10" maximum="300" minimum="0" />
            <mx:Label text="seconds. (0 means off.)" />
            </mx:HBox>
            <mx:AdvancedDataGrid width="100%" id="session_info" dataProvider="{model.session_info}">
                <mx:columns>
                    <mx:AdvancedDataGridColumn id="s_id" headerText="ID" dataField="@id" />
                    <mx:AdvancedDataGridColumn id="s_user" headerText="User" dataField="@user" />
                    <mx:AdvancedDataGridColumn id="s_query"  editable="false" rendererIsEditor="true" itemRenderer="mx.controls.TextInput" headerText="SQL Query" dataField="@query" />
                </mx:columns>
            </mx:AdvancedDataGrid>
        </mx:Panel>
    </mx:HBox>
    
    <mx:HBox left="10" right="10" width="100%">
        <mx:VBox>
        <mx:Panel title="Roles">
            <mx:Button id="mod_roles" label="Modify Selected Role"
                       icon="@Embed(source='/icons/exec.gif')"
                       click="modifyRole();" />
            <mx:AdvancedDataGrid id="roles_info" dataProvider="{model.roles_info}">
                <mx:columns>
                    <mx:AdvancedDataGridColumn id="r_name" headerText="Name" dataField="@name" />
                    <mx:AdvancedDataGridColumn id="r_permissions" headerText="Permissions" dataField="@permissions" />
                </mx:columns>
            </mx:AdvancedDataGrid>
        </mx:Panel>
        </mx:VBox>
    </mx:HBox>
    </mx:VBox>

    <mx:Script>
        <![CDATA[
            import mx.controls.Alert;
            import mx.managers.PopUpManager;
            import com.flexsqladmin.sqladmin.view.ModifyUserWindow;
            import com.flexsqladmin.sqladmin.events.UsersAndRolesEvent;
            import com.adobe.cairngorm.control.CairngormEventDispatcher;
            import com.flexsqladmin.sqladmin.components.DebugWindow;
            import com.flexsqladmin.sqladmin.events.ExecuteSQLEvent;
            import com.flexsqladmin.sqladmin.model.ModelLocator;
            
            import flash.text.TextLineMetrics;    
            
            import com.flexsqladmin.sqladmin.utils.CustomFuncs;
            
            [Bindable]
            private var model:ModelLocator = ModelLocator.getInstance();
            
            public var sessionTimer:Timer;
            
            public function init() : void {
                model.users_windows[id] = this;
                model.users_windows._len += 1;
                
                sessionTimer = new Timer(update_interval.value * 1000);
                sessionTimer.addEventListener(TimerEvent.TIMER, sessionUpdate);
                sessionTimer.start();
                sessionUpdate(null);
                
                s_id.width = measureText(CustomFuncs.wordMult("W", 4)).width;
                s_user.width = measureText(CustomFuncs.wordMult("W", 6)).width;
                s_query.width = measureText(CustomFuncs.wordMult("W", 100)).width;
                 
            }
            
            public function passValidate() : Boolean {
                p_matches.visible = true;
                if (user_pass2.text == user_pass.text) {
                    p_matches.text = "Passwords match";
                    p_matches.setStyle("color", "green");
                    return true;
                } else {
                    p_matches.text = "Passwords do not match";
                    p_matches.setStyle("color", "red");
                    return false;
                }
            }
            
            public function createUser() : void {
                if (user_name.text != '' && user_pass.text != '' && passValidate()) {
                    var addUserEvent:UsersAndRolesEvent = new UsersAndRolesEvent('addNewUser', user_name.text, user_pass.text);
                    CairngormEventDispatcher.getInstance().dispatchEvent(addUserEvent);
                } else {
                    user_pass.setFocus();
                }
            }
            
            public function modifyUser() : void {
                if (users_list.selectedIndex != -1) {
                    var mod_win:ModifyUserWindow = ModifyUserWindow(PopUpManager.createPopUp(this, ModifyUserWindow, true));
                    mod_win.setStyle("borderAlpha", 0.8);
                    mod_win.showCloseButton = true;
                    mod_win.user = users_list.selectedLabel;
                }
            }
            
            public function modifyRole() : void {
                Application.application.addTab('Roles', model.main_tabnav, 'rolesWindow');
            }
            
            public function sessionUpdate(event:TimerEvent) : void {
                if (update_interval.value == 0)
                    return;
                if (update_interval.value * 1000 != sessionTimer.delay) {
                    sessionTimer.stop();
                    sessionTimer = new Timer(update_interval.value * 1000);
                    sessionTimer.addEventListener(TimerEvent.TIMER, sessionUpdate);
                    sessionTimer.start();
                }
                var upEvent:UsersAndRolesEvent = new UsersAndRolesEvent('getCurrentSessions');
                CairngormEventDispatcher.getInstance().dispatchEvent(upEvent);
            }
            
            public function checkUsersList() : void {
                if (!model.users_list) {
                    var usersEvent:UsersAndRolesEvent = new UsersAndRolesEvent('getUsersDetails');
                    CairngormEventDispatcher.getInstance().dispatchEvent(usersEvent);
                }
            }
        ]]>
    </mx:Script>
</mx:Canvas>
