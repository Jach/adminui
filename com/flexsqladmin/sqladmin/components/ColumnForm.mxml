<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright 2010 Dynamo Business Intelligence Corporation. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY Dynamo Business Intelligence Corporation ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Dynamo Business Intelligence Corporation OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init();">

    <mx:Validator id="defval_validator" source="{col_default}" property="text" 
                  required="{default_required}"
                  requiredFieldError="This table has existing values, you must provide a default value if this column cannot be null."
                  />
    
    <mx:FormItem label="Name">
        <mx:TextInput editable="{editable}" id="col_name" text="{col_details.@name}" />
    </mx:FormItem>
    <mx:FormItem label="Nullable">
        <mx:CheckBox enabled="{editable}" id="col_nullable" change="nullboxclick(event);" />
    </mx:FormItem>
    <mx:FormItem label="Data Type">
        <mx:ComboBox id="col_type" enabled="{editable}" dataProvider="{types}" />
        <!--<mx:TextInput editable="{editable}" id="col_type" text="{col_details.@datatype}" />-->
    </mx:FormItem>
    <mx:FormItem label="Digits">
        <mx:TextInput editable="{editable}" id="col_digits" text="{col_details.@decDigits}" />
    </mx:FormItem>
    <mx:FormItem label="Precision">
        <mx:TextInput editable="{editable}" id="col_prec" text="{col_details.@precision}" />
    </mx:FormItem>
    <mx:FormItem label="Default Value">
        <mx:TextInput editable="{editable}" id="col_default" text="{col_details.@defaultValue}" />
    </mx:FormItem>
    <mx:FormItem label="Remarks">
        <mx:TextInput enabled="false" id="col_remarks" text="Not Implemented" />
    </mx:FormItem>
    <mx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            // todo: make data type list
            //       hide precision/digits depending on type selected
            [Bindable]
            public var col_details:XML;
            [Bindable]
            public var editable:Boolean;
            [Bindable]
            public var default_required:Boolean = false;
            
            public var num_existing_rows:Number = 0;
            
            public var loaded:Boolean = false;
            
            [Bindable]
            public var types:Array = ["INTEGER", "VARCHAR", "BOOLEAN", "TIMESTAMP"];
            
            public function init() : void {
                if (col_details.@isNullable != "true" && col_details.@isNullable != "false") {
                    col_details.@isNullable = false;
                } else {
                    col_nullable.selected = (col_details.@isNullable == "true") ? true : false;
                }
                default_required = (!col_nullable.selected && num_existing_rows > 0);
                defval_validator.validate();
                if (default_required) {
                    col_default.setFocus();
                    col_default.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
                }
                 
                col_digits.addEventListener(Event.CHANGE, function():void { col_details.@decDigits = col_digits.text; });
                col_prec.addEventListener(Event.CHANGE, function():void { col_details.@precision = col_prec.text; });
                col_default.addEventListener(Event.CHANGE, function():void { col_details.@defaultValue = col_default.text; });
                col_type.addEventListener(Event.CHANGE, function():void { col_details.@datatype = col_type.selectedItem; });
                
            }
            public function findIndex() : void {
                col_details.setName("column");
                loaded = true;
                for (var i:Number = 0; i < types.length; i++) {
                    if (types[i] == col_details.@datatype) {
                        col_type.selectedIndex = i;
                        break;
                    }
                }
            }
            
            public function nullboxclick(event:Event) : void {
                col_details.@isNullable = event.target.selected;
                default_required = (!col_nullable.selected && num_existing_rows > 0);
                defval_validator.validate();
            }
        ]]>
    </mx:Script>
</mx:Form>