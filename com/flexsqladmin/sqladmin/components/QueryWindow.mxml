<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:components="com.flexsqladmin.sqladmin.components.*"
	width="100%"
	height="100%"
	icon="@Embed(source='/icons/script_select.png')" 
	keyUp="handleShortcuts(event);"
	creationComplete="init();">
	
	<!-- Submit Query, Checkbox (for explain plan), Clear Query, create table, etc. -->
  <mx:HBox width="100%">
      <mx:Button click="submitQuery();" toolTip="(F5) Submit Query" label="Submit Query" icon="@Embed(source='icons/exec.gif')" id="btnQuery" width="108"/>
      <mx:Button click="clearQuery();" icon="@Embed(source='icons/clear.png')" toolTip="(F6) Clear Query" label="Clear Query"/>
      <mx:Button click="submitShowPlanQuery();" icon="@Embed(source='icons/exec_plan.png')" label="Show Execution Plan" toolTip="Show Execution Plan"/>
      <mx:CheckBox label="Include Execution Plan" id="spflag"/>
  </mx:HBox>
	
	<mx:TextArea id="querytext" 
		dragEnter="doDragEnter(event);" 
		dragDrop="doDragDrop(event);"
		keyUp="parseQuery(event);" height="40%" left="10" top="30" right="10" />
		
	<mx:Box width="100%" height="50%" left="10" right="10" bottom="10">
		<mx:TabNavigator id="tabresults" width="100%" height="100%" alpha=".8">
			<mx:Canvas width="100%" height="100%" label="Result" icon="@Embed(source='icons/result.png')">
				<mx:DataGrid id="querydatagrid" dataProvider="{result_info.querydata}" width="100%" height="100%" horizontalScrollPolicy="auto" x="0" y="0"></mx:DataGrid>
			</mx:Canvas>
			<mx:Canvas id="messages" label="Messages" icon="@Embed(source='icons/messages.png')">
				<mx:TextArea text="{result_info.querymessages}" width="100%" height="100%" wordWrap="false" horizontalScrollPolicy="auto" editable="false"/>
			</mx:Canvas>
			<components:ExecutionPlanWindow width="100%" height="100%" id="showplanwin" label="Execution Plan" icon="@Embed(source='icons/exec_plan.png')"/>
			<mx:Canvas id="history" label="History" icon="@Embed(source='icons/history.png')">
				<mx:TextArea htmlText="{result_info.queryHistoryVO.history}" width="100%" height="100%" wordWrap="false" horizontalScrollPolicy="auto" editable="false" id="txtHistory"/>
			</mx:Canvas>
		</mx:TabNavigator>
	</mx:Box>
	
	<mx:Script>
		<![CDATA[
			import com.adobe.cairngorm.business.ServiceLocator;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.flexsqladmin.sqladmin.components.DebugWindow;
			import com.flexsqladmin.sqladmin.events.ExecuteSQLEvent;
			import com.flexsqladmin.sqladmin.model.ModelLocator;
			import com.flexsqladmin.sqladmin.vo.QueryResultInfo;
			import com.flexsqladmin.sqladmin.vo.QueryHistoryVO;
			
			import mx.events.DragEvent;
			import mx.managers.DragManager;

			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			public var result_info : QueryResultInfo;
			
			public function init() : void {
				querytext.percentWidth = 100;
				querytext.setFocus();
								
				result_info = new QueryResultInfo();
				result_info.queryHistoryVO = new QueryHistoryVO();
				result_info.showplanwindow = showplanwin;
				result_info.querydatagrid = querydatagrid;
				model.query_results.push(result_info);
				model.aryQueryWindows.push(this);

			}
						
			public function handleShortcuts(e:KeyboardEvent) : void {
				if(e.keyCode == 116) // F5
					submitQuery();
				else if (e.keyCode == 117) // F6
					clearQuery();
				else if(e.keyCode == 9) { // tab
					var spacer:String = "\t";
					var cutter:int = 0;
					var tempquery:TextArea = querytext;
					if(tempquery.text.charCodeAt(tempquery.selectionBeginIndex - 1) == 13 || tempquery.selectionBeginIndex == 0)
						spacer = " \t";
					if (! e.shiftKey){
						tempquery.text = tempquery.text.substring(0, tempquery.selectionBeginIndex) + spacer + tempquery.text.substring(tempquery.selectionBeginIndex, tempquery.length);
						tempquery.setSelection(tempquery.selectionBeginIndex + spacer.length, tempquery.selectionBeginIndex + spacer.length);	
					} else {
						if (tempquery.selectionBeginIndex > 0 && tempquery.text.charCodeAt(tempquery.selectionBeginIndex - 1) == 9){
							tempquery.text = tempquery.text.substring(0, tempquery.selectionBeginIndex - 1) + tempquery.text.substring(tempquery.selectionBeginIndex, tempquery.length);
							tempquery.setSelection(tempquery.selectionBeginIndex - 1, tempquery.selectionBeginIndex - 1);
						}
					}
					tempquery.setFocus();
					parseQuery(new KeyboardEvent(""));
				}
			}
			
			public function setLabel(s:String):void{
				this.label = s;
			}
			
			public function setText(s:String):void{
				DebugWindow.log("QueryWindow.mxml:setText(" + s + ")");
				querytext.text = querytext.text + s;
				parseQuery(new KeyboardEvent(""));
			}
			
			public function getQueryText():String{
				if (querytext.selectionBeginIndex != querytext.selectionEndIndex)
                    return querytext.text.substring(querytext.selectionBeginIndex, querytext.selectionEndIndex);
                else
                    return querytext.text;
			}
			
			public function resetSelection():void{
            	querytext.selectionBeginIndex = querytext.text.length;
            	querytext.selectionEndIndex = querytext.text.length;
			}
			
			public function clearQuery():void{
				querytext.text = "";
			}
			
			public function parseQuery(e:KeyboardEvent):void{
				if (e.keyCode != 116 && querytext.text != null){
	                var pattern:RegExp = /\b(add|column|modify|truncate|create|table|view|procedure|alter|drop|is|null|not|with|rollup|cube|as|union|all|top|on|like|cross|asc|desc|right|left|set|values|insert|into|update|delete|select|from|where|order|by|inner|outer|join|exec|group|having|and|or|execute)\b/gi;
	                var aggpattern:RegExp = /\b(count|avg|sum|max|min)\b/gi;
	                var regexNewLine:RegExp = /\r/g;
	                var lt:RegExp = /</g;
	                var tempQueryString:String = querytext.text;
	                tempQueryString = tempQueryString.replace(lt, "&lt;");
	                tempQueryString = tempQueryString.replace(pattern, "<FONT COLOR='#0000FF'><B>$1</B></FONT>");
	                tempQueryString = tempQueryString.replace(aggpattern, "<FONT COLOR='#FF33FF'><B>$1</B></FONT>");
	                tempQueryString = tempQueryString.replace(regexNewLine, "<br>");
	                querytext.htmlText = tempQueryString;
	            }
			}
			
			private function doDragEnter(event:DragEvent):void {
            	var dropTarget:TextArea=TextArea(event.currentTarget);
				DragManager.acceptDragDrop(dropTarget);
	        }

	        private function doDragDrop(event:DragEvent):void {
	            var dropTarget:TextArea=TextArea(event.currentTarget);       
	            var items:Array = event.dragSource.dataForFormat("treeItems") as Array;
	            var tempstr:String = items[0].@column;
	            if (tempstr.length == 0)
	            	tempstr = items[0].@label
                dropTarget.text += tempstr;
                resetSelection();
                querytext.setFocus();
                parseQuery(new KeyboardEvent(""));
	        }

            private function submitQuery():void{
            	DebugWindow.log("main.mxml:submitQuery()");
            	DebugWindow.log("main.mxml:Query text - " + getQueryText());
            	var sqt:String = "normal";
            	if(spflag.selected)
	                sqt = "spnormal";
            	var sqlevent:ExecuteSQLEvent = new ExecuteSQLEvent(getQueryText(), sqt);
            	CairngormEventDispatcher.getInstance().dispatchEvent(sqlevent);
				tabresults.selectedIndex = 0;
            }

            private function submitShowPlanQuery():void{
            	DebugWindow.log("main.mxml:submitShowPlanQuery()");
            	DebugWindow.log("main.mxml:Query text - " + getQueryText());
            	var sqlevent:ExecuteSQLEvent = new ExecuteSQLEvent(getQueryText(), "showplan");
            	CairngormEventDispatcher.getInstance().dispatchEvent(sqlevent);
				tabresults.selectedIndex = 2;
            }
            

			
		]]>
	</mx:Script>
</mx:Canvas>
